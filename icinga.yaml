---
- hosts: all
  become: yes

  vars:
    mariadb_root_password: "BigSecret2017!"
    php_packages: [
      "php",
      "php-gd",
      "php-intl",
      "php-ldap",
      "php-ZendFramework",
      "php-ZendFramework-Db-Adapter-Pdo-Mysql"
    ]

  tasks:

  - name: Install Apache
    yum:
      name: httpd
      state: present

  - name: Disable the pre-set Apache welcome page
    shell: sed -i 's/^/#&/g' /etc/httpd/conf.d/welcome.conf

  - name: Forbid Apache from exposing files and directories within the web root directory
    shell: sed -i "s/Options Indexes FollowSymLinks/Options FollowSymLinks/" /etc/httpd/conf/httpd.conf

  - name: Start & Enable Apache
    service:
      name: httpd
      state: started
      enabled: yes

  - name: Create Icgina gpg file
    copy:
      src: "templates/gpg_content.txt"
      dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-ICINGA"
      owner: "root"
      group: "root"
      mode: 0644

  - name: Ensure Icinga yum repository is present
    yum_repository:
      name: icinga-stable-release
      description: "ICINGA (stable release for epel)"
      baseurl: "http://packages.icinga.com/epel/$releasever/release/"
      enabled: yes
      gpgkey: "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ICINGA"
      gpgcheck: yes

  - name: Install epel
    yum:
      name: epel-release
      state: present

  - name: Install Icinga
    yum:
      name: "{{ item }}"
      state: "present"
    with_items:
      - icinga2
      - icinga2-selinux
      - vim-icinga2

  - name: Install MariaDB for Icinga Web
    yum:
      name: "{{ item }}"
      state: "present"
    with_items:
      - mariadb-server
      - mariadb
      - MySQL-python
      - icinga2-ido-mysql

  - name: Ensure MariaDB is started
    service:
      name: mariadb
      state: started
      enabled: yes

  # https://github.com/PCextreme/ansible-role-mariadb/blob/master/tasks/mysql_secure_installation.yml
  - name: Set root Password
    mysql_user: name=root host={{ item }} password={{ mariadb_root_password }} state=present
    with_items:
      - 127.0.0.1
      - ::1
      #- icinga FAILS TO CREATE???
      - localhost

  - name: Add .my.cnf
    template: src=templates/my.cnf.j2 dest="{{ item.file }}" owner="{{ item.owner }}" group="{{ item.group }}" mode=0600
    with_items:
      - { "file": "/root/.my.cnf", "owner": "root", "group": "root" }
      - { "file": "/home/vagrant/.my.cnf", "owner": "vagrant", "group": "vagrant" }

  - name: Remove anonymous users
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - DELETE FROM mysql.user WHERE User=''
    changed_when: False

  - name: Disallow root login remotely
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
    changed_when: False

  - name: Remove test database and access to it
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - DROP DATABASE test
      - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
    changed_when: False
    ignore_errors: True

  - name: Reload privilege tables
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - FLUSH PRIVILEGES
    changed_when: False

  - name: Ensure icinga2 service is started
    service:
      name: icinga2
      state: started
      enabled: yes

  - name: Install nagios-plugins packages
    yum:
      name: "nagios-plugins-all"
      state: "present"

  - name: Install php packages for icinga Web
    yum:
      name: "{{ item }}"
    with_items: "{{ php_packages }}"

  - name: Set php timezone
    lineinfile:
      path: /etc/php.ini
      regexp: '^;date[.]timezone =*'
      line: 'date.timezone = Europe/Zurich'
      state: present

  - name: Ensure Icinga database exists
    mysql_db:
      name: icinga
      state: present

  - name: Ensure MariaDB user for Icinga exists
    mysql_user:
      name: icinga
      password: icinga # Variablise later
      priv: "icinga.*:SELECT,INSERT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"
      state: present

  - name: Restore icinga dump
    shell: mysql icinga < /usr/share/icinga2-ido-mysql/schema/mysql.sql
    args:
      creates: /var/lib/mysql/icinga/icinga_endpointstatus.frm # Change to shell to use this

  - name: Enable the IDO MySQL module
    lineinfile:
      path: /etc/icinga2/features-available/ido-mysql.conf
      line: "{{ item }}"
      state: present
    with_items:
      - 'user = "icinga"'
      - 'password = "icinga"'
      - 'host = "localhost"'
      - 'database = "icinga"'

  - name: Enable the ido-mysql feature
    command: icinga2 feature enable ido-mysql

  - name: Ensure Icinga packages present
    yum:
      name: "{{ item }}"
      state: present
    with_items:
      - icingaweb2
      - icingacli

  - name: Ensure Apache web root directory is the location of Icinga Web 2
    shell: icingacli setup config webserver apache --document-root /usr/share/icingaweb2/public && touch done.true
    args:
      creates: done.true

  # Change to handler?
  - name: Restart services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - httpd
      - icinga2

  - name: Ensure icingaweb2 group exists
    group:
      name: icingaweb2
      state: present

  - name: Ensure apache user is memeber of appropriate group
    user:
      name: apache
      groups: icingaweb2
      append: yes

  - name: Ensure Icinga config has been initiated
    shell: icingacli setup config directory --group icingaweb2 && touch icinga.config.init
    args:
      creates: icinga.config.init

  - name: Ensure Icinga setup token has been created
    shell: icingacli setup token create > icingacli.setup
    args:
      creates: icingacli.setup

  - command: cat icingacli.setup
    register: icingacli

  - name: Output incingacli setup token
    debug:
      var: icingacli.stdout
